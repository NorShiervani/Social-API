// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Social.API;

namespace Social.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200603154634_AddedApiUsers")]
    partial class AddedApiUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Social.API.Models.Authorization.ApiUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("ApiUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApiKey = "111",
                            UserName = "Khepster"
                        },
                        new
                        {
                            Id = 2,
                            ApiKey = "jahaja",
                            UserName = "Berit"
                        });
                });

            modelBuilder.Entity("Social.API.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 95, DateTimeKind.Local).AddTicks(9058),
                            PostId = 3,
                            Text = "Cool yo!",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 96, DateTimeKind.Local).AddTicks(68),
                            PostId = 2,
                            Text = "Fast as fuck!",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 96, DateTimeKind.Local).AddTicks(173),
                            PostId = 3,
                            Text = "Uuugghhh.",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 96, DateTimeKind.Local).AddTicks(247),
                            PostId = 3,
                            Text = "Haha awesome!",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Social.API.Models.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConversationName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Conversations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConversationName = "The cool guys!"
                        });
                });

            modelBuilder.Entity("Social.API.Models.Fake.Fake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Fake");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bill"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Shaun"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hillary"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Emma"
                        });
                });

            modelBuilder.Entity("Social.API.Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            PostId = 1,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Social.API.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserConversatorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserConversatorId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 96, DateTimeKind.Local).AddTicks(1178),
                            Text = "Hello friends!",
                            UserConversatorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 96, DateTimeKind.Local).AddTicks(2316),
                            Text = "Hello!",
                            UserConversatorId = 2
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 96, DateTimeKind.Local).AddTicks(2444),
                            Text = "What up?!",
                            UserConversatorId = 1
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 96, DateTimeKind.Local).AddTicks(2618),
                            Text = "Doing laundry, and you?",
                            UserConversatorId = 2
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 96, DateTimeKind.Local).AddTicks(2697),
                            Text = "Eating breakfast, and staying chill!",
                            UserConversatorId = 1
                        });
                });

            modelBuilder.Entity("Social.API.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 95, DateTimeKind.Local).AddTicks(7766),
                            Text = "Hey everybody! You all good?",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 95, DateTimeKind.Local).AddTicks(8788),
                            Text = "Having the most lovely",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2020, 6, 3, 17, 46, 34, 95, DateTimeKind.Local).AddTicks(8898),
                            Text = "Russia... Is not very nice(to us)...",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Social.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lastname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(2002, 6, 3, 17, 46, 34, 95, DateTimeKind.Local).AddTicks(3533),
                            City = "Brighton",
                            Country = "England",
                            DateRegistered = new DateTime(2020, 6, 3, 17, 46, 34, 91, DateTimeKind.Local).AddTicks(9007),
                            Email = "jd@example.com",
                            Firstname = "John",
                            IsSuspended = false,
                            Lastname = "Doe",
                            Password = "4321234",
                            Role = 0,
                            Username = "LitteJohn2038"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1997, 6, 3, 17, 46, 34, 95, DateTimeKind.Local).AddTicks(6217),
                            City = "El Paso",
                            Country = "USA",
                            DateRegistered = new DateTime(2020, 6, 3, 17, 46, 34, 95, DateTimeKind.Local).AddTicks(6193),
                            Email = "pp@example.com",
                            Firstname = "Patrick",
                            IsSuspended = false,
                            Lastname = "Plopinopel",
                            Password = "44321554",
                            Role = 0,
                            Username = "BigMan55"
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1975, 6, 3, 17, 46, 34, 95, DateTimeKind.Local).AddTicks(6356),
                            City = "Kiev",
                            Country = "Ukraine",
                            DateRegistered = new DateTime(2020, 6, 3, 17, 46, 34, 95, DateTimeKind.Local).AddTicks(6342),
                            Email = "cmso@example.com",
                            Firstname = "Svetlana",
                            IsSuspended = false,
                            Lastname = "Orgonsk",
                            Password = "44515214",
                            Role = 0,
                            Username = "CrazyMama72"
                        });
                });

            modelBuilder.Entity("Social.API.Models.UserConversator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConversationId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserConversators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConversationId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ConversationId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Social.API.Models.Comment", b =>
                {
                    b.HasOne("Social.API.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId");

                    b.HasOne("Social.API.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Social.API.Models.Like", b =>
                {
                    b.HasOne("Social.API.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId");

                    b.HasOne("Social.API.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Social.API.Models.Message", b =>
                {
                    b.HasOne("Social.API.Models.UserConversator", "UserConversator")
                        .WithMany("Messages")
                        .HasForeignKey("UserConversatorId");
                });

            modelBuilder.Entity("Social.API.Models.Post", b =>
                {
                    b.HasOne("Social.API.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Social.API.Models.UserConversator", b =>
                {
                    b.HasOne("Social.API.Models.Conversation", "Conversation")
                        .WithMany("UserConversators")
                        .HasForeignKey("ConversationId");

                    b.HasOne("Social.API.Models.User", "User")
                        .WithMany("UserConversators")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
